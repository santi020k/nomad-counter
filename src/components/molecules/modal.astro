---
interface Props {
  modalId: string
  btnClass?: string
  btnOpenText?: string
  btnPrimaryText?: string
  btnPrimaryOnClick?: () => void
  btnCloseText?: string
  title?: string
}

const { modalId, btnClass, btnOpenText, title, btnCloseText, btnPrimaryOnClick, btnPrimaryText } = Astro.props

const buttonEvent = `${modalId}.showModal()`
---

<button class:list={['btn', btnClass]} onclick={buttonEvent}>{btnOpenText ?? 'Open'}</button>
<dialog id={modalId} class="modal modal-bottom sm:modal-middle">

  <div class="modal-box">
    <form method="dialog">
      <button class="btn btn-circle btn-ghost btn-sm absolute right-8 top-8"><i class="ti ti-x" /></button>
    </form>

    {title ?? <h3 class="text-lg font-bold">{title}</h3>}

    <div class="modal-body">
      <slot />
    </div>

    <div class="modal-action">
      {(btnPrimaryOnClick !== null) && (<button class="btn-primary btn">{btnPrimaryText ?? 'Save'}</button>)}
      {(btnCloseText !== null) && (
        <form method="dialog">
          <button class="btn">{btnCloseText ?? 'Close'}</button>
        </form>
      )}
    </div>
  </div>

  <label class="modal-backdrop" for={modalId}>{'Close'}</label>
</dialog>
